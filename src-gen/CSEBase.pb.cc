// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CSEBase.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "CSEBase.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MicroWireless {
namespace OneM2M {
namespace pb {

namespace {

const ::google::protobuf::Descriptor* CSEBase_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CSEBase_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_CSEBase_2eproto() {
  protobuf_AddDesc_CSEBase_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "CSEBase.proto");
  GOOGLE_CHECK(file != NULL);
  CSEBase_descriptor_ = file->message_type(0);
  static const int CSEBase_offsets_[13] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSEBase, ty_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSEBase, ri_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSEBase, rn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSEBase, ct_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSEBase, lt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSEBase, acpi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSEBase, lbl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSEBase, cst_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSEBase, csi_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSEBase, srt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSEBase, poa_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSEBase, nl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSEBase, ncp_),
  };
  CSEBase_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CSEBase_descriptor_,
      CSEBase::default_instance_,
      CSEBase_offsets_,
      -1,
      -1,
      -1,
      sizeof(CSEBase),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSEBase, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CSEBase, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_CSEBase_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CSEBase_descriptor_, &CSEBase::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_CSEBase_2eproto() {
  delete CSEBase::default_instance_;
  delete CSEBase_reflection_;
}

void protobuf_AddDesc_CSEBase_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2ftimestamp_2eproto();
  ::MicroWireless::OneM2M::pb::protobuf_AddDesc_CommonTypes_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rCSEBase.proto\022\027MicroWireless.OneM2M.pb"
    "\032\037google/protobuf/timestamp.proto\032\021Commo"
    "nTypes.proto\"\266\003\n\007CSEBase\022=\n\002ty\030\001 \001(\01621.M"
    "icroWireless.OneM2M.pb.CommonTypes.Resou"
    "rceType\022\n\n\002ri\030\002 \001(\t\022\n\n\002rn\030\003 \001(\t\022&\n\002ct\030\005 "
    "\001(\0132\032.google.protobuf.Timestamp\022&\n\002lt\030\006 "
    "\001(\0132\032.google.protobuf.Timestamp\022\014\n\004acpi\030"
    "\007 \003(\t\022\013\n\003lbl\030\010 \003(\t\0229\n\003cst\030d \001(\0162,.MicroW"
    "ireless.OneM2M.pb.CommonTypes.CSEType\022\013\n"
    "\003csi\030e \001(\t\022G\n\003srt\030f \003(\0162:.MicroWireless."
    "OneM2M.pb.CommonTypes.SupportedResourceT"
    "ype\022\?\n\003poa\030g \003(\01622.MicroWireless.OneM2M."
    "pb.CommonTypes.PointOfAccess\022\n\n\002nl\030h \001(\t"
    "\022\013\n\003ncp\030i \001(\tb\006proto3", 541);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "CSEBase.proto", &protobuf_RegisterTypes);
  CSEBase::default_instance_ = new CSEBase();
  CSEBase::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_CSEBase_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_CSEBase_2eproto {
  StaticDescriptorInitializer_CSEBase_2eproto() {
    protobuf_AddDesc_CSEBase_2eproto();
  }
} static_descriptor_initializer_CSEBase_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int CSEBase::kTyFieldNumber;
const int CSEBase::kRiFieldNumber;
const int CSEBase::kRnFieldNumber;
const int CSEBase::kCtFieldNumber;
const int CSEBase::kLtFieldNumber;
const int CSEBase::kAcpiFieldNumber;
const int CSEBase::kLblFieldNumber;
const int CSEBase::kCstFieldNumber;
const int CSEBase::kCsiFieldNumber;
const int CSEBase::kSrtFieldNumber;
const int CSEBase::kPoaFieldNumber;
const int CSEBase::kNlFieldNumber;
const int CSEBase::kNcpFieldNumber;
#endif  // !_MSC_VER

CSEBase::CSEBase()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MicroWireless.OneM2M.pb.CSEBase)
}

void CSEBase::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  ct_ = const_cast< ::google::protobuf::Timestamp*>(&::google::protobuf::Timestamp::default_instance());
  lt_ = const_cast< ::google::protobuf::Timestamp*>(&::google::protobuf::Timestamp::default_instance());
}

CSEBase::CSEBase(const CSEBase& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MicroWireless.OneM2M.pb.CSEBase)
}

void CSEBase::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ty_ = 0;
  ri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rn_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ct_ = NULL;
  lt_ = NULL;
  cst_ = 0;
  csi_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ncp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CSEBase::~CSEBase() {
  // @@protoc_insertion_point(destructor:MicroWireless.OneM2M.pb.CSEBase)
  SharedDtor();
}

void CSEBase::SharedDtor() {
  ri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rn_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  csi_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ncp_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete ct_;
    delete lt_;
  }
}

void CSEBase::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CSEBase::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CSEBase_descriptor_;
}

const CSEBase& CSEBase::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_CSEBase_2eproto();
  return *default_instance_;
}

CSEBase* CSEBase::default_instance_ = NULL;

CSEBase* CSEBase::New(::google::protobuf::Arena* arena) const {
  CSEBase* n = new CSEBase;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CSEBase::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<CSEBase*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(ty_, cst_);
  ri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && ct_ != NULL) delete ct_;
  ct_ = NULL;
  if (GetArenaNoVirtual() == NULL && lt_ != NULL) delete lt_;
  lt_ = NULL;
  csi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ncp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  acpi_.Clear();
  lbl_.Clear();
  srt_.Clear();
  poa_.Clear();
}

bool CSEBase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MicroWireless.OneM2M.pb.CSEBase)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .MicroWireless.OneM2M.pb.CommonTypes.ResourceType ty = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ty(static_cast< ::MicroWireless::OneM2M::pb::CommonTypes_ResourceType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_ri;
        break;
      }

      // optional string ri = 2;
      case 2: {
        if (tag == 18) {
         parse_ri:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ri()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ri().data(), this->ri().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MicroWireless.OneM2M.pb.CSEBase.ri");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_rn;
        break;
      }

      // optional string rn = 3;
      case 3: {
        if (tag == 26) {
         parse_rn:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rn()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->rn().data(), this->rn().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MicroWireless.OneM2M.pb.CSEBase.rn");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_ct;
        break;
      }

      // optional .google.protobuf.Timestamp ct = 5;
      case 5: {
        if (tag == 42) {
         parse_ct:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ct()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_lt;
        break;
      }

      // optional .google.protobuf.Timestamp lt = 6;
      case 6: {
        if (tag == 50) {
         parse_lt:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_lt()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_acpi;
        break;
      }

      // repeated string acpi = 7;
      case 7: {
        if (tag == 58) {
         parse_acpi:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_acpi()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->acpi(this->acpi_size() - 1).data(),
            this->acpi(this->acpi_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MicroWireless.OneM2M.pb.CSEBase.acpi");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_acpi;
        if (input->ExpectTag(66)) goto parse_lbl;
        break;
      }

      // repeated string lbl = 8;
      case 8: {
        if (tag == 66) {
         parse_lbl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_lbl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->lbl(this->lbl_size() - 1).data(),
            this->lbl(this->lbl_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MicroWireless.OneM2M.pb.CSEBase.lbl");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_lbl;
        if (input->ExpectTag(800)) goto parse_cst;
        break;
      }

      // optional .MicroWireless.OneM2M.pb.CommonTypes.CSEType cst = 100;
      case 100: {
        if (tag == 800) {
         parse_cst:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cst(static_cast< ::MicroWireless::OneM2M::pb::CommonTypes_CSEType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(810)) goto parse_csi;
        break;
      }

      // optional string csi = 101;
      case 101: {
        if (tag == 810) {
         parse_csi:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_csi()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->csi().data(), this->csi().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MicroWireless.OneM2M.pb.CSEBase.csi");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(816)) goto parse_srt;
        break;
      }

      // repeated .MicroWireless.OneM2M.pb.CommonTypes.SupportedResourceType srt = 102;
      case 102: {
        if (tag == 816) {
         parse_srt:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_srt(static_cast< ::MicroWireless::OneM2M::pb::CommonTypes_SupportedResourceType >(value));
        } else if (tag == 818) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(length);
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_srt(static_cast< ::MicroWireless::OneM2M::pb::CommonTypes_SupportedResourceType >(value));
          }
          input->PopLimit(limit);
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(816)) goto parse_srt;
        if (input->ExpectTag(824)) goto parse_poa;
        break;
      }

      // repeated .MicroWireless.OneM2M.pb.CommonTypes.PointOfAccess poa = 103;
      case 103: {
        if (tag == 824) {
         parse_poa:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_poa(static_cast< ::MicroWireless::OneM2M::pb::CommonTypes_PointOfAccess >(value));
        } else if (tag == 826) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(length);
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_poa(static_cast< ::MicroWireless::OneM2M::pb::CommonTypes_PointOfAccess >(value));
          }
          input->PopLimit(limit);
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(824)) goto parse_poa;
        if (input->ExpectTag(834)) goto parse_nl;
        break;
      }

      // optional string nl = 104;
      case 104: {
        if (tag == 834) {
         parse_nl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nl().data(), this->nl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MicroWireless.OneM2M.pb.CSEBase.nl");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(842)) goto parse_ncp;
        break;
      }

      // optional string ncp = 105;
      case 105: {
        if (tag == 842) {
         parse_ncp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ncp()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ncp().data(), this->ncp().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MicroWireless.OneM2M.pb.CSEBase.ncp");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MicroWireless.OneM2M.pb.CSEBase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MicroWireless.OneM2M.pb.CSEBase)
  return false;
#undef DO_
}

void CSEBase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MicroWireless.OneM2M.pb.CSEBase)
  // optional .MicroWireless.OneM2M.pb.CommonTypes.ResourceType ty = 1;
  if (this->ty() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ty(), output);
  }

  // optional string ri = 2;
  if (this->ri().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ri().data(), this->ri().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MicroWireless.OneM2M.pb.CSEBase.ri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ri(), output);
  }

  // optional string rn = 3;
  if (this->rn().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rn().data(), this->rn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MicroWireless.OneM2M.pb.CSEBase.rn");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->rn(), output);
  }

  // optional .google.protobuf.Timestamp ct = 5;
  if (this->has_ct()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->ct_, output);
  }

  // optional .google.protobuf.Timestamp lt = 6;
  if (this->has_lt()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->lt_, output);
  }

  // repeated string acpi = 7;
  for (int i = 0; i < this->acpi_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->acpi(i).data(), this->acpi(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "MicroWireless.OneM2M.pb.CSEBase.acpi");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->acpi(i), output);
  }

  // repeated string lbl = 8;
  for (int i = 0; i < this->lbl_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->lbl(i).data(), this->lbl(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "MicroWireless.OneM2M.pb.CSEBase.lbl");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->lbl(i), output);
  }

  // optional .MicroWireless.OneM2M.pb.CommonTypes.CSEType cst = 100;
  if (this->cst() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      100, this->cst(), output);
  }

  // optional string csi = 101;
  if (this->csi().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->csi().data(), this->csi().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MicroWireless.OneM2M.pb.CSEBase.csi");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      101, this->csi(), output);
  }

  // repeated .MicroWireless.OneM2M.pb.CommonTypes.SupportedResourceType srt = 102;
  if (this->srt_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      102,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(_srt_cached_byte_size_);
  }
  for (int i = 0; i < this->srt_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->srt(i), output);
  }

  // repeated .MicroWireless.OneM2M.pb.CommonTypes.PointOfAccess poa = 103;
  if (this->poa_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      103,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(_poa_cached_byte_size_);
  }
  for (int i = 0; i < this->poa_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->poa(i), output);
  }

  // optional string nl = 104;
  if (this->nl().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nl().data(), this->nl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MicroWireless.OneM2M.pb.CSEBase.nl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      104, this->nl(), output);
  }

  // optional string ncp = 105;
  if (this->ncp().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ncp().data(), this->ncp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MicroWireless.OneM2M.pb.CSEBase.ncp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      105, this->ncp(), output);
  }

  // @@protoc_insertion_point(serialize_end:MicroWireless.OneM2M.pb.CSEBase)
}

::google::protobuf::uint8* CSEBase::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MicroWireless.OneM2M.pb.CSEBase)
  // optional .MicroWireless.OneM2M.pb.CommonTypes.ResourceType ty = 1;
  if (this->ty() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ty(), target);
  }

  // optional string ri = 2;
  if (this->ri().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ri().data(), this->ri().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MicroWireless.OneM2M.pb.CSEBase.ri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ri(), target);
  }

  // optional string rn = 3;
  if (this->rn().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->rn().data(), this->rn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MicroWireless.OneM2M.pb.CSEBase.rn");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->rn(), target);
  }

  // optional .google.protobuf.Timestamp ct = 5;
  if (this->has_ct()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, *this->ct_, target);
  }

  // optional .google.protobuf.Timestamp lt = 6;
  if (this->has_lt()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, *this->lt_, target);
  }

  // repeated string acpi = 7;
  for (int i = 0; i < this->acpi_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->acpi(i).data(), this->acpi(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MicroWireless.OneM2M.pb.CSEBase.acpi");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->acpi(i), target);
  }

  // repeated string lbl = 8;
  for (int i = 0; i < this->lbl_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lbl(i).data(), this->lbl(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MicroWireless.OneM2M.pb.CSEBase.lbl");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->lbl(i), target);
  }

  // optional .MicroWireless.OneM2M.pb.CommonTypes.CSEType cst = 100;
  if (this->cst() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      100, this->cst(), target);
  }

  // optional string csi = 101;
  if (this->csi().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->csi().data(), this->csi().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MicroWireless.OneM2M.pb.CSEBase.csi");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        101, this->csi(), target);
  }

  // repeated .MicroWireless.OneM2M.pb.CommonTypes.SupportedResourceType srt = 102;
  if (this->srt_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      102,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(    _srt_cached_byte_size_, target);
  }
  for (int i = 0; i < this->srt_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->srt(i), target);
  }

  // repeated .MicroWireless.OneM2M.pb.CommonTypes.PointOfAccess poa = 103;
  if (this->poa_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      103,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(    _poa_cached_byte_size_, target);
  }
  for (int i = 0; i < this->poa_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->poa(i), target);
  }

  // optional string nl = 104;
  if (this->nl().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nl().data(), this->nl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MicroWireless.OneM2M.pb.CSEBase.nl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        104, this->nl(), target);
  }

  // optional string ncp = 105;
  if (this->ncp().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ncp().data(), this->ncp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MicroWireless.OneM2M.pb.CSEBase.ncp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        105, this->ncp(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MicroWireless.OneM2M.pb.CSEBase)
  return target;
}

int CSEBase::ByteSize() const {
  int total_size = 0;

  // optional .MicroWireless.OneM2M.pb.CommonTypes.ResourceType ty = 1;
  if (this->ty() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ty());
  }

  // optional string ri = 2;
  if (this->ri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ri());
  }

  // optional string rn = 3;
  if (this->rn().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->rn());
  }

  // optional .google.protobuf.Timestamp ct = 5;
  if (this->has_ct()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->ct_);
  }

  // optional .google.protobuf.Timestamp lt = 6;
  if (this->has_lt()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->lt_);
  }

  // optional .MicroWireless.OneM2M.pb.CommonTypes.CSEType cst = 100;
  if (this->cst() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cst());
  }

  // optional string csi = 101;
  if (this->csi().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->csi());
  }

  // optional string nl = 104;
  if (this->nl().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nl());
  }

  // optional string ncp = 105;
  if (this->ncp().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ncp());
  }

  // repeated string acpi = 7;
  total_size += 1 * this->acpi_size();
  for (int i = 0; i < this->acpi_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->acpi(i));
  }

  // repeated string lbl = 8;
  total_size += 1 * this->lbl_size();
  for (int i = 0; i < this->lbl_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->lbl(i));
  }

  // repeated .MicroWireless.OneM2M.pb.CommonTypes.SupportedResourceType srt = 102;
  {
    int data_size = 0;
    for (int i = 0; i < this->srt_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->srt(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _srt_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .MicroWireless.OneM2M.pb.CommonTypes.PointOfAccess poa = 103;
  {
    int data_size = 0;
    for (int i = 0; i < this->poa_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->poa(i));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _poa_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CSEBase::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CSEBase* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const CSEBase>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CSEBase::MergeFrom(const CSEBase& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  acpi_.MergeFrom(from.acpi_);
  lbl_.MergeFrom(from.lbl_);
  srt_.MergeFrom(from.srt_);
  poa_.MergeFrom(from.poa_);
  if (from.ty() != 0) {
    set_ty(from.ty());
  }
  if (from.ri().size() > 0) {

    ri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ri_);
  }
  if (from.rn().size() > 0) {

    rn_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rn_);
  }
  if (from.has_ct()) {
    mutable_ct()->::google::protobuf::Timestamp::MergeFrom(from.ct());
  }
  if (from.has_lt()) {
    mutable_lt()->::google::protobuf::Timestamp::MergeFrom(from.lt());
  }
  if (from.cst() != 0) {
    set_cst(from.cst());
  }
  if (from.csi().size() > 0) {

    csi_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.csi_);
  }
  if (from.nl().size() > 0) {

    nl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nl_);
  }
  if (from.ncp().size() > 0) {

    ncp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ncp_);
  }
}

void CSEBase::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CSEBase::CopyFrom(const CSEBase& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CSEBase::IsInitialized() const {

  return true;
}

void CSEBase::Swap(CSEBase* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CSEBase::InternalSwap(CSEBase* other) {
  std::swap(ty_, other->ty_);
  ri_.Swap(&other->ri_);
  rn_.Swap(&other->rn_);
  std::swap(ct_, other->ct_);
  std::swap(lt_, other->lt_);
  acpi_.UnsafeArenaSwap(&other->acpi_);
  lbl_.UnsafeArenaSwap(&other->lbl_);
  std::swap(cst_, other->cst_);
  csi_.Swap(&other->csi_);
  srt_.UnsafeArenaSwap(&other->srt_);
  poa_.UnsafeArenaSwap(&other->poa_);
  nl_.Swap(&other->nl_);
  ncp_.Swap(&other->ncp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CSEBase::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CSEBase_descriptor_;
  metadata.reflection = CSEBase_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CSEBase

// optional .MicroWireless.OneM2M.pb.CommonTypes.ResourceType ty = 1;
void CSEBase::clear_ty() {
  ty_ = 0;
}
 ::MicroWireless::OneM2M::pb::CommonTypes_ResourceType CSEBase::ty() const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.CSEBase.ty)
  return static_cast< ::MicroWireless::OneM2M::pb::CommonTypes_ResourceType >(ty_);
}
 void CSEBase::set_ty(::MicroWireless::OneM2M::pb::CommonTypes_ResourceType value) {
  
  ty_ = value;
  // @@protoc_insertion_point(field_set:MicroWireless.OneM2M.pb.CSEBase.ty)
}

// optional string ri = 2;
void CSEBase::clear_ri() {
  ri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CSEBase::ri() const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.CSEBase.ri)
  return ri_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CSEBase::set_ri(const ::std::string& value) {
  
  ri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MicroWireless.OneM2M.pb.CSEBase.ri)
}
 void CSEBase::set_ri(const char* value) {
  
  ri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MicroWireless.OneM2M.pb.CSEBase.ri)
}
 void CSEBase::set_ri(const char* value, size_t size) {
  
  ri_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MicroWireless.OneM2M.pb.CSEBase.ri)
}
 ::std::string* CSEBase::mutable_ri() {
  
  // @@protoc_insertion_point(field_mutable:MicroWireless.OneM2M.pb.CSEBase.ri)
  return ri_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CSEBase::release_ri() {
  
  return ri_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CSEBase::set_allocated_ri(::std::string* ri) {
  if (ri != NULL) {
    
  } else {
    
  }
  ri_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ri);
  // @@protoc_insertion_point(field_set_allocated:MicroWireless.OneM2M.pb.CSEBase.ri)
}

// optional string rn = 3;
void CSEBase::clear_rn() {
  rn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CSEBase::rn() const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.CSEBase.rn)
  return rn_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CSEBase::set_rn(const ::std::string& value) {
  
  rn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MicroWireless.OneM2M.pb.CSEBase.rn)
}
 void CSEBase::set_rn(const char* value) {
  
  rn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MicroWireless.OneM2M.pb.CSEBase.rn)
}
 void CSEBase::set_rn(const char* value, size_t size) {
  
  rn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MicroWireless.OneM2M.pb.CSEBase.rn)
}
 ::std::string* CSEBase::mutable_rn() {
  
  // @@protoc_insertion_point(field_mutable:MicroWireless.OneM2M.pb.CSEBase.rn)
  return rn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CSEBase::release_rn() {
  
  return rn_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CSEBase::set_allocated_rn(::std::string* rn) {
  if (rn != NULL) {
    
  } else {
    
  }
  rn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rn);
  // @@protoc_insertion_point(field_set_allocated:MicroWireless.OneM2M.pb.CSEBase.rn)
}

// optional .google.protobuf.Timestamp ct = 5;
bool CSEBase::has_ct() const {
  return !_is_default_instance_ && ct_ != NULL;
}
void CSEBase::clear_ct() {
  if (GetArenaNoVirtual() == NULL && ct_ != NULL) delete ct_;
  ct_ = NULL;
}
 const ::google::protobuf::Timestamp& CSEBase::ct() const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.CSEBase.ct)
  return ct_ != NULL ? *ct_ : *default_instance_->ct_;
}
 ::google::protobuf::Timestamp* CSEBase::mutable_ct() {
  
  if (ct_ == NULL) {
    ct_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:MicroWireless.OneM2M.pb.CSEBase.ct)
  return ct_;
}
 ::google::protobuf::Timestamp* CSEBase::release_ct() {
  
  ::google::protobuf::Timestamp* temp = ct_;
  ct_ = NULL;
  return temp;
}
 void CSEBase::set_allocated_ct(::google::protobuf::Timestamp* ct) {
  delete ct_;
  ct_ = ct;
  if (ct) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:MicroWireless.OneM2M.pb.CSEBase.ct)
}

// optional .google.protobuf.Timestamp lt = 6;
bool CSEBase::has_lt() const {
  return !_is_default_instance_ && lt_ != NULL;
}
void CSEBase::clear_lt() {
  if (GetArenaNoVirtual() == NULL && lt_ != NULL) delete lt_;
  lt_ = NULL;
}
 const ::google::protobuf::Timestamp& CSEBase::lt() const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.CSEBase.lt)
  return lt_ != NULL ? *lt_ : *default_instance_->lt_;
}
 ::google::protobuf::Timestamp* CSEBase::mutable_lt() {
  
  if (lt_ == NULL) {
    lt_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:MicroWireless.OneM2M.pb.CSEBase.lt)
  return lt_;
}
 ::google::protobuf::Timestamp* CSEBase::release_lt() {
  
  ::google::protobuf::Timestamp* temp = lt_;
  lt_ = NULL;
  return temp;
}
 void CSEBase::set_allocated_lt(::google::protobuf::Timestamp* lt) {
  delete lt_;
  lt_ = lt;
  if (lt) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:MicroWireless.OneM2M.pb.CSEBase.lt)
}

// repeated string acpi = 7;
int CSEBase::acpi_size() const {
  return acpi_.size();
}
void CSEBase::clear_acpi() {
  acpi_.Clear();
}
 const ::std::string& CSEBase::acpi(int index) const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.CSEBase.acpi)
  return acpi_.Get(index);
}
 ::std::string* CSEBase::mutable_acpi(int index) {
  // @@protoc_insertion_point(field_mutable:MicroWireless.OneM2M.pb.CSEBase.acpi)
  return acpi_.Mutable(index);
}
 void CSEBase::set_acpi(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:MicroWireless.OneM2M.pb.CSEBase.acpi)
  acpi_.Mutable(index)->assign(value);
}
 void CSEBase::set_acpi(int index, const char* value) {
  acpi_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:MicroWireless.OneM2M.pb.CSEBase.acpi)
}
 void CSEBase::set_acpi(int index, const char* value, size_t size) {
  acpi_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MicroWireless.OneM2M.pb.CSEBase.acpi)
}
 ::std::string* CSEBase::add_acpi() {
  return acpi_.Add();
}
 void CSEBase::add_acpi(const ::std::string& value) {
  acpi_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:MicroWireless.OneM2M.pb.CSEBase.acpi)
}
 void CSEBase::add_acpi(const char* value) {
  acpi_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:MicroWireless.OneM2M.pb.CSEBase.acpi)
}
 void CSEBase::add_acpi(const char* value, size_t size) {
  acpi_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:MicroWireless.OneM2M.pb.CSEBase.acpi)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
CSEBase::acpi() const {
  // @@protoc_insertion_point(field_list:MicroWireless.OneM2M.pb.CSEBase.acpi)
  return acpi_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
CSEBase::mutable_acpi() {
  // @@protoc_insertion_point(field_mutable_list:MicroWireless.OneM2M.pb.CSEBase.acpi)
  return &acpi_;
}

// repeated string lbl = 8;
int CSEBase::lbl_size() const {
  return lbl_.size();
}
void CSEBase::clear_lbl() {
  lbl_.Clear();
}
 const ::std::string& CSEBase::lbl(int index) const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.CSEBase.lbl)
  return lbl_.Get(index);
}
 ::std::string* CSEBase::mutable_lbl(int index) {
  // @@protoc_insertion_point(field_mutable:MicroWireless.OneM2M.pb.CSEBase.lbl)
  return lbl_.Mutable(index);
}
 void CSEBase::set_lbl(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:MicroWireless.OneM2M.pb.CSEBase.lbl)
  lbl_.Mutable(index)->assign(value);
}
 void CSEBase::set_lbl(int index, const char* value) {
  lbl_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:MicroWireless.OneM2M.pb.CSEBase.lbl)
}
 void CSEBase::set_lbl(int index, const char* value, size_t size) {
  lbl_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MicroWireless.OneM2M.pb.CSEBase.lbl)
}
 ::std::string* CSEBase::add_lbl() {
  return lbl_.Add();
}
 void CSEBase::add_lbl(const ::std::string& value) {
  lbl_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:MicroWireless.OneM2M.pb.CSEBase.lbl)
}
 void CSEBase::add_lbl(const char* value) {
  lbl_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:MicroWireless.OneM2M.pb.CSEBase.lbl)
}
 void CSEBase::add_lbl(const char* value, size_t size) {
  lbl_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:MicroWireless.OneM2M.pb.CSEBase.lbl)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
CSEBase::lbl() const {
  // @@protoc_insertion_point(field_list:MicroWireless.OneM2M.pb.CSEBase.lbl)
  return lbl_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
CSEBase::mutable_lbl() {
  // @@protoc_insertion_point(field_mutable_list:MicroWireless.OneM2M.pb.CSEBase.lbl)
  return &lbl_;
}

// optional .MicroWireless.OneM2M.pb.CommonTypes.CSEType cst = 100;
void CSEBase::clear_cst() {
  cst_ = 0;
}
 ::MicroWireless::OneM2M::pb::CommonTypes_CSEType CSEBase::cst() const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.CSEBase.cst)
  return static_cast< ::MicroWireless::OneM2M::pb::CommonTypes_CSEType >(cst_);
}
 void CSEBase::set_cst(::MicroWireless::OneM2M::pb::CommonTypes_CSEType value) {
  
  cst_ = value;
  // @@protoc_insertion_point(field_set:MicroWireless.OneM2M.pb.CSEBase.cst)
}

// optional string csi = 101;
void CSEBase::clear_csi() {
  csi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CSEBase::csi() const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.CSEBase.csi)
  return csi_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CSEBase::set_csi(const ::std::string& value) {
  
  csi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MicroWireless.OneM2M.pb.CSEBase.csi)
}
 void CSEBase::set_csi(const char* value) {
  
  csi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MicroWireless.OneM2M.pb.CSEBase.csi)
}
 void CSEBase::set_csi(const char* value, size_t size) {
  
  csi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MicroWireless.OneM2M.pb.CSEBase.csi)
}
 ::std::string* CSEBase::mutable_csi() {
  
  // @@protoc_insertion_point(field_mutable:MicroWireless.OneM2M.pb.CSEBase.csi)
  return csi_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CSEBase::release_csi() {
  
  return csi_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CSEBase::set_allocated_csi(::std::string* csi) {
  if (csi != NULL) {
    
  } else {
    
  }
  csi_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), csi);
  // @@protoc_insertion_point(field_set_allocated:MicroWireless.OneM2M.pb.CSEBase.csi)
}

// repeated .MicroWireless.OneM2M.pb.CommonTypes.SupportedResourceType srt = 102;
int CSEBase::srt_size() const {
  return srt_.size();
}
void CSEBase::clear_srt() {
  srt_.Clear();
}
 ::MicroWireless::OneM2M::pb::CommonTypes_SupportedResourceType CSEBase::srt(int index) const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.CSEBase.srt)
  return static_cast< ::MicroWireless::OneM2M::pb::CommonTypes_SupportedResourceType >(srt_.Get(index));
}
 void CSEBase::set_srt(int index, ::MicroWireless::OneM2M::pb::CommonTypes_SupportedResourceType value) {
  srt_.Set(index, value);
  // @@protoc_insertion_point(field_set:MicroWireless.OneM2M.pb.CSEBase.srt)
}
 void CSEBase::add_srt(::MicroWireless::OneM2M::pb::CommonTypes_SupportedResourceType value) {
  srt_.Add(value);
  // @@protoc_insertion_point(field_add:MicroWireless.OneM2M.pb.CSEBase.srt)
}
 const ::google::protobuf::RepeatedField<int>&
CSEBase::srt() const {
  // @@protoc_insertion_point(field_list:MicroWireless.OneM2M.pb.CSEBase.srt)
  return srt_;
}
 ::google::protobuf::RepeatedField<int>*
CSEBase::mutable_srt() {
  // @@protoc_insertion_point(field_mutable_list:MicroWireless.OneM2M.pb.CSEBase.srt)
  return &srt_;
}

// repeated .MicroWireless.OneM2M.pb.CommonTypes.PointOfAccess poa = 103;
int CSEBase::poa_size() const {
  return poa_.size();
}
void CSEBase::clear_poa() {
  poa_.Clear();
}
 ::MicroWireless::OneM2M::pb::CommonTypes_PointOfAccess CSEBase::poa(int index) const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.CSEBase.poa)
  return static_cast< ::MicroWireless::OneM2M::pb::CommonTypes_PointOfAccess >(poa_.Get(index));
}
 void CSEBase::set_poa(int index, ::MicroWireless::OneM2M::pb::CommonTypes_PointOfAccess value) {
  poa_.Set(index, value);
  // @@protoc_insertion_point(field_set:MicroWireless.OneM2M.pb.CSEBase.poa)
}
 void CSEBase::add_poa(::MicroWireless::OneM2M::pb::CommonTypes_PointOfAccess value) {
  poa_.Add(value);
  // @@protoc_insertion_point(field_add:MicroWireless.OneM2M.pb.CSEBase.poa)
}
 const ::google::protobuf::RepeatedField<int>&
CSEBase::poa() const {
  // @@protoc_insertion_point(field_list:MicroWireless.OneM2M.pb.CSEBase.poa)
  return poa_;
}
 ::google::protobuf::RepeatedField<int>*
CSEBase::mutable_poa() {
  // @@protoc_insertion_point(field_mutable_list:MicroWireless.OneM2M.pb.CSEBase.poa)
  return &poa_;
}

// optional string nl = 104;
void CSEBase::clear_nl() {
  nl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CSEBase::nl() const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.CSEBase.nl)
  return nl_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CSEBase::set_nl(const ::std::string& value) {
  
  nl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MicroWireless.OneM2M.pb.CSEBase.nl)
}
 void CSEBase::set_nl(const char* value) {
  
  nl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MicroWireless.OneM2M.pb.CSEBase.nl)
}
 void CSEBase::set_nl(const char* value, size_t size) {
  
  nl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MicroWireless.OneM2M.pb.CSEBase.nl)
}
 ::std::string* CSEBase::mutable_nl() {
  
  // @@protoc_insertion_point(field_mutable:MicroWireless.OneM2M.pb.CSEBase.nl)
  return nl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CSEBase::release_nl() {
  
  return nl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CSEBase::set_allocated_nl(::std::string* nl) {
  if (nl != NULL) {
    
  } else {
    
  }
  nl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nl);
  // @@protoc_insertion_point(field_set_allocated:MicroWireless.OneM2M.pb.CSEBase.nl)
}

// optional string ncp = 105;
void CSEBase::clear_ncp() {
  ncp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& CSEBase::ncp() const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.CSEBase.ncp)
  return ncp_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CSEBase::set_ncp(const ::std::string& value) {
  
  ncp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MicroWireless.OneM2M.pb.CSEBase.ncp)
}
 void CSEBase::set_ncp(const char* value) {
  
  ncp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MicroWireless.OneM2M.pb.CSEBase.ncp)
}
 void CSEBase::set_ncp(const char* value, size_t size) {
  
  ncp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MicroWireless.OneM2M.pb.CSEBase.ncp)
}
 ::std::string* CSEBase::mutable_ncp() {
  
  // @@protoc_insertion_point(field_mutable:MicroWireless.OneM2M.pb.CSEBase.ncp)
  return ncp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* CSEBase::release_ncp() {
  
  return ncp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void CSEBase::set_allocated_ncp(::std::string* ncp) {
  if (ncp != NULL) {
    
  } else {
    
  }
  ncp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ncp);
  // @@protoc_insertion_point(field_set_allocated:MicroWireless.OneM2M.pb.CSEBase.ncp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace OneM2M
}  // namespace MicroWireless

// @@protoc_insertion_point(global_scope)
