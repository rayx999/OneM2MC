// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ResponsePrim.proto

#ifndef PROTOBUF_ResponsePrim_2eproto__INCLUDED
#define PROTOBUF_ResponsePrim_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/protobuf/timestamp.pb.h"
#include "CommonTypes.pb.h"
// @@protoc_insertion_point(includes)

namespace MicroWireless {
namespace OneM2M {
namespace pb {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_ResponsePrim_2eproto();
void protobuf_AssignDesc_ResponsePrim_2eproto();
void protobuf_ShutdownFile_ResponsePrim_2eproto();

class ResponsePrim;

// ===================================================================

class ResponsePrim : public ::google::protobuf::Message {
 public:
  ResponsePrim();
  virtual ~ResponsePrim();

  ResponsePrim(const ResponsePrim& from);

  inline ResponsePrim& operator=(const ResponsePrim& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponsePrim& default_instance();

  void Swap(ResponsePrim* other);

  // implements Message ----------------------------------------------

  inline ResponsePrim* New() const { return New(NULL); }

  ResponsePrim* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResponsePrim& from);
  void MergeFrom(const ResponsePrim& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ResponsePrim* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MicroWireless.OneM2M.pb.CommonTypes.ResponseStatusCode rsc = 1;
  void clear_rsc();
  static const int kRscFieldNumber = 1;
  ::MicroWireless::OneM2M::pb::CommonTypes_ResponseStatusCode rsc() const;
  void set_rsc(::MicroWireless::OneM2M::pb::CommonTypes_ResponseStatusCode value);

  // optional string rqi = 2;
  void clear_rqi();
  static const int kRqiFieldNumber = 2;
  const ::std::string& rqi() const;
  void set_rqi(const ::std::string& value);
  void set_rqi(const char* value);
  void set_rqi(const char* value, size_t size);
  ::std::string* mutable_rqi();
  ::std::string* release_rqi();
  void set_allocated_rqi(::std::string* rqi);

  // optional string pc = 3;
  void clear_pc();
  static const int kPcFieldNumber = 3;
  const ::std::string& pc() const;
  void set_pc(const ::std::string& value);
  void set_pc(const char* value);
  void set_pc(const char* value, size_t size);
  ::std::string* mutable_pc();
  ::std::string* release_pc();
  void set_allocated_pc(::std::string* pc);

  // optional string to = 4;
  void clear_to();
  static const int kToFieldNumber = 4;
  const ::std::string& to() const;
  void set_to(const ::std::string& value);
  void set_to(const char* value);
  void set_to(const char* value, size_t size);
  ::std::string* mutable_to();
  ::std::string* release_to();
  void set_allocated_to(::std::string* to);

  // optional string fr = 5;
  void clear_fr();
  static const int kFrFieldNumber = 5;
  const ::std::string& fr() const;
  void set_fr(const ::std::string& value);
  void set_fr(const char* value);
  void set_fr(const char* value, size_t size);
  ::std::string* mutable_fr();
  ::std::string* release_fr();
  void set_allocated_fr(::std::string* fr);

  // optional .google.protobuf.Timestamp ot = 6;
  bool has_ot() const;
  void clear_ot();
  static const int kOtFieldNumber = 6;
  const ::google::protobuf::Timestamp& ot() const;
  ::google::protobuf::Timestamp* mutable_ot();
  ::google::protobuf::Timestamp* release_ot();
  void set_allocated_ot(::google::protobuf::Timestamp* ot);

  // optional .google.protobuf.Timestamp rset = 7;
  bool has_rset() const;
  void clear_rset();
  static const int kRsetFieldNumber = 7;
  const ::google::protobuf::Timestamp& rset() const;
  ::google::protobuf::Timestamp* mutable_rset();
  ::google::protobuf::Timestamp* release_rset();
  void set_allocated_rset(::google::protobuf::Timestamp* rset);

  // optional .MicroWireless.OneM2M.pb.CommonTypes.EventCat ec = 8;
  void clear_ec();
  static const int kEcFieldNumber = 8;
  ::MicroWireless::OneM2M::pb::CommonTypes_EventCat ec() const;
  void set_ec(::MicroWireless::OneM2M::pb::CommonTypes_EventCat value);

  // @@protoc_insertion_point(class_scope:MicroWireless.OneM2M.pb.ResponsePrim)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr rqi_;
  ::google::protobuf::internal::ArenaStringPtr pc_;
  ::google::protobuf::internal::ArenaStringPtr to_;
  int rsc_;
  int ec_;
  ::google::protobuf::internal::ArenaStringPtr fr_;
  ::google::protobuf::Timestamp* ot_;
  ::google::protobuf::Timestamp* rset_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_ResponsePrim_2eproto();
  friend void protobuf_AssignDesc_ResponsePrim_2eproto();
  friend void protobuf_ShutdownFile_ResponsePrim_2eproto();

  void InitAsDefaultInstance();
  static ResponsePrim* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ResponsePrim

// optional .MicroWireless.OneM2M.pb.CommonTypes.ResponseStatusCode rsc = 1;
inline void ResponsePrim::clear_rsc() {
  rsc_ = 0;
}
inline ::MicroWireless::OneM2M::pb::CommonTypes_ResponseStatusCode ResponsePrim::rsc() const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.ResponsePrim.rsc)
  return static_cast< ::MicroWireless::OneM2M::pb::CommonTypes_ResponseStatusCode >(rsc_);
}
inline void ResponsePrim::set_rsc(::MicroWireless::OneM2M::pb::CommonTypes_ResponseStatusCode value) {
  
  rsc_ = value;
  // @@protoc_insertion_point(field_set:MicroWireless.OneM2M.pb.ResponsePrim.rsc)
}

// optional string rqi = 2;
inline void ResponsePrim::clear_rqi() {
  rqi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResponsePrim::rqi() const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.ResponsePrim.rqi)
  return rqi_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponsePrim::set_rqi(const ::std::string& value) {
  
  rqi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MicroWireless.OneM2M.pb.ResponsePrim.rqi)
}
inline void ResponsePrim::set_rqi(const char* value) {
  
  rqi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MicroWireless.OneM2M.pb.ResponsePrim.rqi)
}
inline void ResponsePrim::set_rqi(const char* value, size_t size) {
  
  rqi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MicroWireless.OneM2M.pb.ResponsePrim.rqi)
}
inline ::std::string* ResponsePrim::mutable_rqi() {
  
  // @@protoc_insertion_point(field_mutable:MicroWireless.OneM2M.pb.ResponsePrim.rqi)
  return rqi_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResponsePrim::release_rqi() {
  
  return rqi_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponsePrim::set_allocated_rqi(::std::string* rqi) {
  if (rqi != NULL) {
    
  } else {
    
  }
  rqi_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rqi);
  // @@protoc_insertion_point(field_set_allocated:MicroWireless.OneM2M.pb.ResponsePrim.rqi)
}

// optional string pc = 3;
inline void ResponsePrim::clear_pc() {
  pc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResponsePrim::pc() const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.ResponsePrim.pc)
  return pc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponsePrim::set_pc(const ::std::string& value) {
  
  pc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MicroWireless.OneM2M.pb.ResponsePrim.pc)
}
inline void ResponsePrim::set_pc(const char* value) {
  
  pc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MicroWireless.OneM2M.pb.ResponsePrim.pc)
}
inline void ResponsePrim::set_pc(const char* value, size_t size) {
  
  pc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MicroWireless.OneM2M.pb.ResponsePrim.pc)
}
inline ::std::string* ResponsePrim::mutable_pc() {
  
  // @@protoc_insertion_point(field_mutable:MicroWireless.OneM2M.pb.ResponsePrim.pc)
  return pc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResponsePrim::release_pc() {
  
  return pc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponsePrim::set_allocated_pc(::std::string* pc) {
  if (pc != NULL) {
    
  } else {
    
  }
  pc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pc);
  // @@protoc_insertion_point(field_set_allocated:MicroWireless.OneM2M.pb.ResponsePrim.pc)
}

// optional string to = 4;
inline void ResponsePrim::clear_to() {
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResponsePrim::to() const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.ResponsePrim.to)
  return to_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponsePrim::set_to(const ::std::string& value) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MicroWireless.OneM2M.pb.ResponsePrim.to)
}
inline void ResponsePrim::set_to(const char* value) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MicroWireless.OneM2M.pb.ResponsePrim.to)
}
inline void ResponsePrim::set_to(const char* value, size_t size) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MicroWireless.OneM2M.pb.ResponsePrim.to)
}
inline ::std::string* ResponsePrim::mutable_to() {
  
  // @@protoc_insertion_point(field_mutable:MicroWireless.OneM2M.pb.ResponsePrim.to)
  return to_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResponsePrim::release_to() {
  
  return to_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponsePrim::set_allocated_to(::std::string* to) {
  if (to != NULL) {
    
  } else {
    
  }
  to_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to);
  // @@protoc_insertion_point(field_set_allocated:MicroWireless.OneM2M.pb.ResponsePrim.to)
}

// optional string fr = 5;
inline void ResponsePrim::clear_fr() {
  fr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResponsePrim::fr() const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.ResponsePrim.fr)
  return fr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponsePrim::set_fr(const ::std::string& value) {
  
  fr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MicroWireless.OneM2M.pb.ResponsePrim.fr)
}
inline void ResponsePrim::set_fr(const char* value) {
  
  fr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MicroWireless.OneM2M.pb.ResponsePrim.fr)
}
inline void ResponsePrim::set_fr(const char* value, size_t size) {
  
  fr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MicroWireless.OneM2M.pb.ResponsePrim.fr)
}
inline ::std::string* ResponsePrim::mutable_fr() {
  
  // @@protoc_insertion_point(field_mutable:MicroWireless.OneM2M.pb.ResponsePrim.fr)
  return fr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResponsePrim::release_fr() {
  
  return fr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponsePrim::set_allocated_fr(::std::string* fr) {
  if (fr != NULL) {
    
  } else {
    
  }
  fr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fr);
  // @@protoc_insertion_point(field_set_allocated:MicroWireless.OneM2M.pb.ResponsePrim.fr)
}

// optional .google.protobuf.Timestamp ot = 6;
inline bool ResponsePrim::has_ot() const {
  return !_is_default_instance_ && ot_ != NULL;
}
inline void ResponsePrim::clear_ot() {
  if (GetArenaNoVirtual() == NULL && ot_ != NULL) delete ot_;
  ot_ = NULL;
}
inline const ::google::protobuf::Timestamp& ResponsePrim::ot() const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.ResponsePrim.ot)
  return ot_ != NULL ? *ot_ : *default_instance_->ot_;
}
inline ::google::protobuf::Timestamp* ResponsePrim::mutable_ot() {
  
  if (ot_ == NULL) {
    ot_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:MicroWireless.OneM2M.pb.ResponsePrim.ot)
  return ot_;
}
inline ::google::protobuf::Timestamp* ResponsePrim::release_ot() {
  
  ::google::protobuf::Timestamp* temp = ot_;
  ot_ = NULL;
  return temp;
}
inline void ResponsePrim::set_allocated_ot(::google::protobuf::Timestamp* ot) {
  delete ot_;
  ot_ = ot;
  if (ot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:MicroWireless.OneM2M.pb.ResponsePrim.ot)
}

// optional .google.protobuf.Timestamp rset = 7;
inline bool ResponsePrim::has_rset() const {
  return !_is_default_instance_ && rset_ != NULL;
}
inline void ResponsePrim::clear_rset() {
  if (GetArenaNoVirtual() == NULL && rset_ != NULL) delete rset_;
  rset_ = NULL;
}
inline const ::google::protobuf::Timestamp& ResponsePrim::rset() const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.ResponsePrim.rset)
  return rset_ != NULL ? *rset_ : *default_instance_->rset_;
}
inline ::google::protobuf::Timestamp* ResponsePrim::mutable_rset() {
  
  if (rset_ == NULL) {
    rset_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:MicroWireless.OneM2M.pb.ResponsePrim.rset)
  return rset_;
}
inline ::google::protobuf::Timestamp* ResponsePrim::release_rset() {
  
  ::google::protobuf::Timestamp* temp = rset_;
  rset_ = NULL;
  return temp;
}
inline void ResponsePrim::set_allocated_rset(::google::protobuf::Timestamp* rset) {
  delete rset_;
  rset_ = rset;
  if (rset) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:MicroWireless.OneM2M.pb.ResponsePrim.rset)
}

// optional .MicroWireless.OneM2M.pb.CommonTypes.EventCat ec = 8;
inline void ResponsePrim::clear_ec() {
  ec_ = 0;
}
inline ::MicroWireless::OneM2M::pb::CommonTypes_EventCat ResponsePrim::ec() const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.ResponsePrim.ec)
  return static_cast< ::MicroWireless::OneM2M::pb::CommonTypes_EventCat >(ec_);
}
inline void ResponsePrim::set_ec(::MicroWireless::OneM2M::pb::CommonTypes_EventCat value) {
  
  ec_ = value;
  // @@protoc_insertion_point(field_set:MicroWireless.OneM2M.pb.ResponsePrim.ec)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace OneM2M
}  // namespace MicroWireless

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ResponsePrim_2eproto__INCLUDED
