// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RequestPrim.proto

#ifndef PROTOBUF_RequestPrim_2eproto__INCLUDED
#define PROTOBUF_RequestPrim_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "google/protobuf/timestamp.pb.h"
#include "google/protobuf/duration.pb.h"
#include "CommonTypes.pb.h"
#include "FilterCriteria.pb.h"
// @@protoc_insertion_point(includes)

namespace MicroWireless {
namespace OneM2M {
namespace pb {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_RequestPrim_2eproto();
void protobuf_AssignDesc_RequestPrim_2eproto();
void protobuf_ShutdownFile_RequestPrim_2eproto();

class RequestPrim;

// ===================================================================

class RequestPrim : public ::google::protobuf::Message {
 public:
  RequestPrim();
  virtual ~RequestPrim();

  RequestPrim(const RequestPrim& from);

  inline RequestPrim& operator=(const RequestPrim& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestPrim& default_instance();

  void Swap(RequestPrim* other);

  // implements Message ----------------------------------------------

  inline RequestPrim* New() const { return New(NULL); }

  RequestPrim* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestPrim& from);
  void MergeFrom(const RequestPrim& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(RequestPrim* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .MicroWireless.OneM2M.pb.CommonTypes.Operation op = 1;
  void clear_op();
  static const int kOpFieldNumber = 1;
  ::MicroWireless::OneM2M::pb::CommonTypes_Operation op() const;
  void set_op(::MicroWireless::OneM2M::pb::CommonTypes_Operation value);

  // optional string to = 2;
  void clear_to();
  static const int kToFieldNumber = 2;
  const ::std::string& to() const;
  void set_to(const ::std::string& value);
  void set_to(const char* value);
  void set_to(const char* value, size_t size);
  ::std::string* mutable_to();
  ::std::string* release_to();
  void set_allocated_to(::std::string* to);

  // optional string fr = 3;
  void clear_fr();
  static const int kFrFieldNumber = 3;
  const ::std::string& fr() const;
  void set_fr(const ::std::string& value);
  void set_fr(const char* value);
  void set_fr(const char* value, size_t size);
  ::std::string* mutable_fr();
  ::std::string* release_fr();
  void set_allocated_fr(::std::string* fr);

  // optional string rqi = 4;
  void clear_rqi();
  static const int kRqiFieldNumber = 4;
  const ::std::string& rqi() const;
  void set_rqi(const ::std::string& value);
  void set_rqi(const char* value);
  void set_rqi(const char* value, size_t size);
  ::std::string* mutable_rqi();
  ::std::string* release_rqi();
  void set_allocated_rqi(::std::string* rqi);

  // optional .MicroWireless.OneM2M.pb.CommonTypes.SupportedResourceType ty = 5;
  void clear_ty();
  static const int kTyFieldNumber = 5;
  ::MicroWireless::OneM2M::pb::CommonTypes_SupportedResourceType ty() const;
  void set_ty(::MicroWireless::OneM2M::pb::CommonTypes_SupportedResourceType value);

  // optional string nm = 6;
  void clear_nm();
  static const int kNmFieldNumber = 6;
  const ::std::string& nm() const;
  void set_nm(const ::std::string& value);
  void set_nm(const char* value);
  void set_nm(const char* value, size_t size);
  ::std::string* mutable_nm();
  ::std::string* release_nm();
  void set_allocated_nm(::std::string* nm);

  // optional string pc = 7;
  void clear_pc();
  static const int kPcFieldNumber = 7;
  const ::std::string& pc() const;
  void set_pc(const ::std::string& value);
  void set_pc(const char* value);
  void set_pc(const char* value, size_t size);
  ::std::string* mutable_pc();
  ::std::string* release_pc();
  void set_allocated_pc(::std::string* pc);

  // optional .google.protobuf.Timestamp ot = 8;
  bool has_ot() const;
  void clear_ot();
  static const int kOtFieldNumber = 8;
  const ::google::protobuf::Timestamp& ot() const;
  ::google::protobuf::Timestamp* mutable_ot();
  ::google::protobuf::Timestamp* release_ot();
  void set_allocated_ot(::google::protobuf::Timestamp* ot);

  // optional .google.protobuf.Timestamp rqet = 9;
  bool has_rqet() const;
  void clear_rqet();
  static const int kRqetFieldNumber = 9;
  const ::google::protobuf::Timestamp& rqet() const;
  ::google::protobuf::Timestamp* mutable_rqet();
  ::google::protobuf::Timestamp* release_rqet();
  void set_allocated_rqet(::google::protobuf::Timestamp* rqet);

  // optional .google.protobuf.Timestamp rset = 10;
  bool has_rset() const;
  void clear_rset();
  static const int kRsetFieldNumber = 10;
  const ::google::protobuf::Timestamp& rset() const;
  ::google::protobuf::Timestamp* mutable_rset();
  ::google::protobuf::Timestamp* release_rset();
  void set_allocated_rset(::google::protobuf::Timestamp* rset);

  // optional .google.protobuf.Duration oet = 11;
  bool has_oet() const;
  void clear_oet();
  static const int kOetFieldNumber = 11;
  const ::google::protobuf::Duration& oet() const;
  ::google::protobuf::Duration* mutable_oet();
  ::google::protobuf::Duration* release_oet();
  void set_allocated_oet(::google::protobuf::Duration* oet);

  // optional .MicroWireless.OneM2M.pb.CommonTypes.ResponseType rt = 12;
  void clear_rt();
  static const int kRtFieldNumber = 12;
  ::MicroWireless::OneM2M::pb::CommonTypes_ResponseType rt() const;
  void set_rt(::MicroWireless::OneM2M::pb::CommonTypes_ResponseType value);

  // optional .google.protobuf.Duration rp = 13;
  bool has_rp() const;
  void clear_rp();
  static const int kRpFieldNumber = 13;
  const ::google::protobuf::Duration& rp() const;
  ::google::protobuf::Duration* mutable_rp();
  ::google::protobuf::Duration* release_rp();
  void set_allocated_rp(::google::protobuf::Duration* rp);

  // optional .MicroWireless.OneM2M.pb.CommonTypes.ResultContent rcn = 14;
  void clear_rcn();
  static const int kRcnFieldNumber = 14;
  ::MicroWireless::OneM2M::pb::CommonTypes_ResultContent rcn() const;
  void set_rcn(::MicroWireless::OneM2M::pb::CommonTypes_ResultContent value);

  // optional .MicroWireless.OneM2M.pb.CommonTypes.EventCat ec = 15;
  void clear_ec();
  static const int kEcFieldNumber = 15;
  ::MicroWireless::OneM2M::pb::CommonTypes_EventCat ec() const;
  void set_ec(::MicroWireless::OneM2M::pb::CommonTypes_EventCat value);

  // optional bool da = 16;
  void clear_da();
  static const int kDaFieldNumber = 16;
  bool da() const;
  void set_da(bool value);

  // optional string gid = 17;
  void clear_gid();
  static const int kGidFieldNumber = 17;
  const ::std::string& gid() const;
  void set_gid(const ::std::string& value);
  void set_gid(const char* value);
  void set_gid(const char* value, size_t size);
  ::std::string* mutable_gid();
  ::std::string* release_gid();
  void set_allocated_gid(::std::string* gid);

  // optional .MicroWireless.OneM2M.pb.FilterCriteria fc = 18;
  bool has_fc() const;
  void clear_fc();
  static const int kFcFieldNumber = 18;
  const ::MicroWireless::OneM2M::pb::FilterCriteria& fc() const;
  ::MicroWireless::OneM2M::pb::FilterCriteria* mutable_fc();
  ::MicroWireless::OneM2M::pb::FilterCriteria* release_fc();
  void set_allocated_fc(::MicroWireless::OneM2M::pb::FilterCriteria* fc);

  // optional .MicroWireless.OneM2M.pb.CommonTypes.DiscoveryResultType drt = 19;
  void clear_drt();
  static const int kDrtFieldNumber = 19;
  ::MicroWireless::OneM2M::pb::CommonTypes_DiscoveryResultType drt() const;
  void set_drt(::MicroWireless::OneM2M::pb::CommonTypes_DiscoveryResultType value);

  // @@protoc_insertion_point(class_scope:MicroWireless.OneM2M.pb.RequestPrim)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::internal::ArenaStringPtr to_;
  ::google::protobuf::internal::ArenaStringPtr fr_;
  int op_;
  int ty_;
  ::google::protobuf::internal::ArenaStringPtr rqi_;
  ::google::protobuf::internal::ArenaStringPtr nm_;
  ::google::protobuf::internal::ArenaStringPtr pc_;
  ::google::protobuf::Timestamp* ot_;
  ::google::protobuf::Timestamp* rqet_;
  ::google::protobuf::Timestamp* rset_;
  ::google::protobuf::Duration* oet_;
  ::google::protobuf::Duration* rp_;
  int rt_;
  int rcn_;
  int ec_;
  bool da_;
  ::google::protobuf::internal::ArenaStringPtr gid_;
  ::MicroWireless::OneM2M::pb::FilterCriteria* fc_;
  int drt_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_RequestPrim_2eproto();
  friend void protobuf_AssignDesc_RequestPrim_2eproto();
  friend void protobuf_ShutdownFile_RequestPrim_2eproto();

  void InitAsDefaultInstance();
  static RequestPrim* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RequestPrim

// optional .MicroWireless.OneM2M.pb.CommonTypes.Operation op = 1;
inline void RequestPrim::clear_op() {
  op_ = 0;
}
inline ::MicroWireless::OneM2M::pb::CommonTypes_Operation RequestPrim::op() const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.RequestPrim.op)
  return static_cast< ::MicroWireless::OneM2M::pb::CommonTypes_Operation >(op_);
}
inline void RequestPrim::set_op(::MicroWireless::OneM2M::pb::CommonTypes_Operation value) {
  
  op_ = value;
  // @@protoc_insertion_point(field_set:MicroWireless.OneM2M.pb.RequestPrim.op)
}

// optional string to = 2;
inline void RequestPrim::clear_to() {
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RequestPrim::to() const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.RequestPrim.to)
  return to_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestPrim::set_to(const ::std::string& value) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MicroWireless.OneM2M.pb.RequestPrim.to)
}
inline void RequestPrim::set_to(const char* value) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MicroWireless.OneM2M.pb.RequestPrim.to)
}
inline void RequestPrim::set_to(const char* value, size_t size) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MicroWireless.OneM2M.pb.RequestPrim.to)
}
inline ::std::string* RequestPrim::mutable_to() {
  
  // @@protoc_insertion_point(field_mutable:MicroWireless.OneM2M.pb.RequestPrim.to)
  return to_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RequestPrim::release_to() {
  
  return to_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestPrim::set_allocated_to(::std::string* to) {
  if (to != NULL) {
    
  } else {
    
  }
  to_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to);
  // @@protoc_insertion_point(field_set_allocated:MicroWireless.OneM2M.pb.RequestPrim.to)
}

// optional string fr = 3;
inline void RequestPrim::clear_fr() {
  fr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RequestPrim::fr() const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.RequestPrim.fr)
  return fr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestPrim::set_fr(const ::std::string& value) {
  
  fr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MicroWireless.OneM2M.pb.RequestPrim.fr)
}
inline void RequestPrim::set_fr(const char* value) {
  
  fr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MicroWireless.OneM2M.pb.RequestPrim.fr)
}
inline void RequestPrim::set_fr(const char* value, size_t size) {
  
  fr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MicroWireless.OneM2M.pb.RequestPrim.fr)
}
inline ::std::string* RequestPrim::mutable_fr() {
  
  // @@protoc_insertion_point(field_mutable:MicroWireless.OneM2M.pb.RequestPrim.fr)
  return fr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RequestPrim::release_fr() {
  
  return fr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestPrim::set_allocated_fr(::std::string* fr) {
  if (fr != NULL) {
    
  } else {
    
  }
  fr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fr);
  // @@protoc_insertion_point(field_set_allocated:MicroWireless.OneM2M.pb.RequestPrim.fr)
}

// optional string rqi = 4;
inline void RequestPrim::clear_rqi() {
  rqi_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RequestPrim::rqi() const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.RequestPrim.rqi)
  return rqi_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestPrim::set_rqi(const ::std::string& value) {
  
  rqi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MicroWireless.OneM2M.pb.RequestPrim.rqi)
}
inline void RequestPrim::set_rqi(const char* value) {
  
  rqi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MicroWireless.OneM2M.pb.RequestPrim.rqi)
}
inline void RequestPrim::set_rqi(const char* value, size_t size) {
  
  rqi_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MicroWireless.OneM2M.pb.RequestPrim.rqi)
}
inline ::std::string* RequestPrim::mutable_rqi() {
  
  // @@protoc_insertion_point(field_mutable:MicroWireless.OneM2M.pb.RequestPrim.rqi)
  return rqi_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RequestPrim::release_rqi() {
  
  return rqi_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestPrim::set_allocated_rqi(::std::string* rqi) {
  if (rqi != NULL) {
    
  } else {
    
  }
  rqi_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rqi);
  // @@protoc_insertion_point(field_set_allocated:MicroWireless.OneM2M.pb.RequestPrim.rqi)
}

// optional .MicroWireless.OneM2M.pb.CommonTypes.SupportedResourceType ty = 5;
inline void RequestPrim::clear_ty() {
  ty_ = 0;
}
inline ::MicroWireless::OneM2M::pb::CommonTypes_SupportedResourceType RequestPrim::ty() const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.RequestPrim.ty)
  return static_cast< ::MicroWireless::OneM2M::pb::CommonTypes_SupportedResourceType >(ty_);
}
inline void RequestPrim::set_ty(::MicroWireless::OneM2M::pb::CommonTypes_SupportedResourceType value) {
  
  ty_ = value;
  // @@protoc_insertion_point(field_set:MicroWireless.OneM2M.pb.RequestPrim.ty)
}

// optional string nm = 6;
inline void RequestPrim::clear_nm() {
  nm_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RequestPrim::nm() const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.RequestPrim.nm)
  return nm_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestPrim::set_nm(const ::std::string& value) {
  
  nm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MicroWireless.OneM2M.pb.RequestPrim.nm)
}
inline void RequestPrim::set_nm(const char* value) {
  
  nm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MicroWireless.OneM2M.pb.RequestPrim.nm)
}
inline void RequestPrim::set_nm(const char* value, size_t size) {
  
  nm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MicroWireless.OneM2M.pb.RequestPrim.nm)
}
inline ::std::string* RequestPrim::mutable_nm() {
  
  // @@protoc_insertion_point(field_mutable:MicroWireless.OneM2M.pb.RequestPrim.nm)
  return nm_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RequestPrim::release_nm() {
  
  return nm_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestPrim::set_allocated_nm(::std::string* nm) {
  if (nm != NULL) {
    
  } else {
    
  }
  nm_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nm);
  // @@protoc_insertion_point(field_set_allocated:MicroWireless.OneM2M.pb.RequestPrim.nm)
}

// optional string pc = 7;
inline void RequestPrim::clear_pc() {
  pc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RequestPrim::pc() const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.RequestPrim.pc)
  return pc_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestPrim::set_pc(const ::std::string& value) {
  
  pc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MicroWireless.OneM2M.pb.RequestPrim.pc)
}
inline void RequestPrim::set_pc(const char* value) {
  
  pc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MicroWireless.OneM2M.pb.RequestPrim.pc)
}
inline void RequestPrim::set_pc(const char* value, size_t size) {
  
  pc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MicroWireless.OneM2M.pb.RequestPrim.pc)
}
inline ::std::string* RequestPrim::mutable_pc() {
  
  // @@protoc_insertion_point(field_mutable:MicroWireless.OneM2M.pb.RequestPrim.pc)
  return pc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RequestPrim::release_pc() {
  
  return pc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestPrim::set_allocated_pc(::std::string* pc) {
  if (pc != NULL) {
    
  } else {
    
  }
  pc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pc);
  // @@protoc_insertion_point(field_set_allocated:MicroWireless.OneM2M.pb.RequestPrim.pc)
}

// optional .google.protobuf.Timestamp ot = 8;
inline bool RequestPrim::has_ot() const {
  return !_is_default_instance_ && ot_ != NULL;
}
inline void RequestPrim::clear_ot() {
  if (GetArenaNoVirtual() == NULL && ot_ != NULL) delete ot_;
  ot_ = NULL;
}
inline const ::google::protobuf::Timestamp& RequestPrim::ot() const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.RequestPrim.ot)
  return ot_ != NULL ? *ot_ : *default_instance_->ot_;
}
inline ::google::protobuf::Timestamp* RequestPrim::mutable_ot() {
  
  if (ot_ == NULL) {
    ot_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:MicroWireless.OneM2M.pb.RequestPrim.ot)
  return ot_;
}
inline ::google::protobuf::Timestamp* RequestPrim::release_ot() {
  
  ::google::protobuf::Timestamp* temp = ot_;
  ot_ = NULL;
  return temp;
}
inline void RequestPrim::set_allocated_ot(::google::protobuf::Timestamp* ot) {
  delete ot_;
  ot_ = ot;
  if (ot) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:MicroWireless.OneM2M.pb.RequestPrim.ot)
}

// optional .google.protobuf.Timestamp rqet = 9;
inline bool RequestPrim::has_rqet() const {
  return !_is_default_instance_ && rqet_ != NULL;
}
inline void RequestPrim::clear_rqet() {
  if (GetArenaNoVirtual() == NULL && rqet_ != NULL) delete rqet_;
  rqet_ = NULL;
}
inline const ::google::protobuf::Timestamp& RequestPrim::rqet() const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.RequestPrim.rqet)
  return rqet_ != NULL ? *rqet_ : *default_instance_->rqet_;
}
inline ::google::protobuf::Timestamp* RequestPrim::mutable_rqet() {
  
  if (rqet_ == NULL) {
    rqet_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:MicroWireless.OneM2M.pb.RequestPrim.rqet)
  return rqet_;
}
inline ::google::protobuf::Timestamp* RequestPrim::release_rqet() {
  
  ::google::protobuf::Timestamp* temp = rqet_;
  rqet_ = NULL;
  return temp;
}
inline void RequestPrim::set_allocated_rqet(::google::protobuf::Timestamp* rqet) {
  delete rqet_;
  rqet_ = rqet;
  if (rqet) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:MicroWireless.OneM2M.pb.RequestPrim.rqet)
}

// optional .google.protobuf.Timestamp rset = 10;
inline bool RequestPrim::has_rset() const {
  return !_is_default_instance_ && rset_ != NULL;
}
inline void RequestPrim::clear_rset() {
  if (GetArenaNoVirtual() == NULL && rset_ != NULL) delete rset_;
  rset_ = NULL;
}
inline const ::google::protobuf::Timestamp& RequestPrim::rset() const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.RequestPrim.rset)
  return rset_ != NULL ? *rset_ : *default_instance_->rset_;
}
inline ::google::protobuf::Timestamp* RequestPrim::mutable_rset() {
  
  if (rset_ == NULL) {
    rset_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:MicroWireless.OneM2M.pb.RequestPrim.rset)
  return rset_;
}
inline ::google::protobuf::Timestamp* RequestPrim::release_rset() {
  
  ::google::protobuf::Timestamp* temp = rset_;
  rset_ = NULL;
  return temp;
}
inline void RequestPrim::set_allocated_rset(::google::protobuf::Timestamp* rset) {
  delete rset_;
  rset_ = rset;
  if (rset) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:MicroWireless.OneM2M.pb.RequestPrim.rset)
}

// optional .google.protobuf.Duration oet = 11;
inline bool RequestPrim::has_oet() const {
  return !_is_default_instance_ && oet_ != NULL;
}
inline void RequestPrim::clear_oet() {
  if (GetArenaNoVirtual() == NULL && oet_ != NULL) delete oet_;
  oet_ = NULL;
}
inline const ::google::protobuf::Duration& RequestPrim::oet() const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.RequestPrim.oet)
  return oet_ != NULL ? *oet_ : *default_instance_->oet_;
}
inline ::google::protobuf::Duration* RequestPrim::mutable_oet() {
  
  if (oet_ == NULL) {
    oet_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:MicroWireless.OneM2M.pb.RequestPrim.oet)
  return oet_;
}
inline ::google::protobuf::Duration* RequestPrim::release_oet() {
  
  ::google::protobuf::Duration* temp = oet_;
  oet_ = NULL;
  return temp;
}
inline void RequestPrim::set_allocated_oet(::google::protobuf::Duration* oet) {
  delete oet_;
  oet_ = oet;
  if (oet) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:MicroWireless.OneM2M.pb.RequestPrim.oet)
}

// optional .MicroWireless.OneM2M.pb.CommonTypes.ResponseType rt = 12;
inline void RequestPrim::clear_rt() {
  rt_ = 0;
}
inline ::MicroWireless::OneM2M::pb::CommonTypes_ResponseType RequestPrim::rt() const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.RequestPrim.rt)
  return static_cast< ::MicroWireless::OneM2M::pb::CommonTypes_ResponseType >(rt_);
}
inline void RequestPrim::set_rt(::MicroWireless::OneM2M::pb::CommonTypes_ResponseType value) {
  
  rt_ = value;
  // @@protoc_insertion_point(field_set:MicroWireless.OneM2M.pb.RequestPrim.rt)
}

// optional .google.protobuf.Duration rp = 13;
inline bool RequestPrim::has_rp() const {
  return !_is_default_instance_ && rp_ != NULL;
}
inline void RequestPrim::clear_rp() {
  if (GetArenaNoVirtual() == NULL && rp_ != NULL) delete rp_;
  rp_ = NULL;
}
inline const ::google::protobuf::Duration& RequestPrim::rp() const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.RequestPrim.rp)
  return rp_ != NULL ? *rp_ : *default_instance_->rp_;
}
inline ::google::protobuf::Duration* RequestPrim::mutable_rp() {
  
  if (rp_ == NULL) {
    rp_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:MicroWireless.OneM2M.pb.RequestPrim.rp)
  return rp_;
}
inline ::google::protobuf::Duration* RequestPrim::release_rp() {
  
  ::google::protobuf::Duration* temp = rp_;
  rp_ = NULL;
  return temp;
}
inline void RequestPrim::set_allocated_rp(::google::protobuf::Duration* rp) {
  delete rp_;
  rp_ = rp;
  if (rp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:MicroWireless.OneM2M.pb.RequestPrim.rp)
}

// optional .MicroWireless.OneM2M.pb.CommonTypes.ResultContent rcn = 14;
inline void RequestPrim::clear_rcn() {
  rcn_ = 0;
}
inline ::MicroWireless::OneM2M::pb::CommonTypes_ResultContent RequestPrim::rcn() const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.RequestPrim.rcn)
  return static_cast< ::MicroWireless::OneM2M::pb::CommonTypes_ResultContent >(rcn_);
}
inline void RequestPrim::set_rcn(::MicroWireless::OneM2M::pb::CommonTypes_ResultContent value) {
  
  rcn_ = value;
  // @@protoc_insertion_point(field_set:MicroWireless.OneM2M.pb.RequestPrim.rcn)
}

// optional .MicroWireless.OneM2M.pb.CommonTypes.EventCat ec = 15;
inline void RequestPrim::clear_ec() {
  ec_ = 0;
}
inline ::MicroWireless::OneM2M::pb::CommonTypes_EventCat RequestPrim::ec() const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.RequestPrim.ec)
  return static_cast< ::MicroWireless::OneM2M::pb::CommonTypes_EventCat >(ec_);
}
inline void RequestPrim::set_ec(::MicroWireless::OneM2M::pb::CommonTypes_EventCat value) {
  
  ec_ = value;
  // @@protoc_insertion_point(field_set:MicroWireless.OneM2M.pb.RequestPrim.ec)
}

// optional bool da = 16;
inline void RequestPrim::clear_da() {
  da_ = false;
}
inline bool RequestPrim::da() const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.RequestPrim.da)
  return da_;
}
inline void RequestPrim::set_da(bool value) {
  
  da_ = value;
  // @@protoc_insertion_point(field_set:MicroWireless.OneM2M.pb.RequestPrim.da)
}

// optional string gid = 17;
inline void RequestPrim::clear_gid() {
  gid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RequestPrim::gid() const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.RequestPrim.gid)
  return gid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestPrim::set_gid(const ::std::string& value) {
  
  gid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MicroWireless.OneM2M.pb.RequestPrim.gid)
}
inline void RequestPrim::set_gid(const char* value) {
  
  gid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MicroWireless.OneM2M.pb.RequestPrim.gid)
}
inline void RequestPrim::set_gid(const char* value, size_t size) {
  
  gid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MicroWireless.OneM2M.pb.RequestPrim.gid)
}
inline ::std::string* RequestPrim::mutable_gid() {
  
  // @@protoc_insertion_point(field_mutable:MicroWireless.OneM2M.pb.RequestPrim.gid)
  return gid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RequestPrim::release_gid() {
  
  return gid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RequestPrim::set_allocated_gid(::std::string* gid) {
  if (gid != NULL) {
    
  } else {
    
  }
  gid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gid);
  // @@protoc_insertion_point(field_set_allocated:MicroWireless.OneM2M.pb.RequestPrim.gid)
}

// optional .MicroWireless.OneM2M.pb.FilterCriteria fc = 18;
inline bool RequestPrim::has_fc() const {
  return !_is_default_instance_ && fc_ != NULL;
}
inline void RequestPrim::clear_fc() {
  if (GetArenaNoVirtual() == NULL && fc_ != NULL) delete fc_;
  fc_ = NULL;
}
inline const ::MicroWireless::OneM2M::pb::FilterCriteria& RequestPrim::fc() const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.RequestPrim.fc)
  return fc_ != NULL ? *fc_ : *default_instance_->fc_;
}
inline ::MicroWireless::OneM2M::pb::FilterCriteria* RequestPrim::mutable_fc() {
  
  if (fc_ == NULL) {
    fc_ = new ::MicroWireless::OneM2M::pb::FilterCriteria;
  }
  // @@protoc_insertion_point(field_mutable:MicroWireless.OneM2M.pb.RequestPrim.fc)
  return fc_;
}
inline ::MicroWireless::OneM2M::pb::FilterCriteria* RequestPrim::release_fc() {
  
  ::MicroWireless::OneM2M::pb::FilterCriteria* temp = fc_;
  fc_ = NULL;
  return temp;
}
inline void RequestPrim::set_allocated_fc(::MicroWireless::OneM2M::pb::FilterCriteria* fc) {
  delete fc_;
  fc_ = fc;
  if (fc) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:MicroWireless.OneM2M.pb.RequestPrim.fc)
}

// optional .MicroWireless.OneM2M.pb.CommonTypes.DiscoveryResultType drt = 19;
inline void RequestPrim::clear_drt() {
  drt_ = 0;
}
inline ::MicroWireless::OneM2M::pb::CommonTypes_DiscoveryResultType RequestPrim::drt() const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.RequestPrim.drt)
  return static_cast< ::MicroWireless::OneM2M::pb::CommonTypes_DiscoveryResultType >(drt_);
}
inline void RequestPrim::set_drt(::MicroWireless::OneM2M::pb::CommonTypes_DiscoveryResultType value) {
  
  drt_ = value;
  // @@protoc_insertion_point(field_set:MicroWireless.OneM2M.pb.RequestPrim.drt)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace OneM2M
}  // namespace MicroWireless

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_RequestPrim_2eproto__INCLUDED
