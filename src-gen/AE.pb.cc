// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AE.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "AE.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace MicroWireless {
namespace OneM2M {
namespace pb {

namespace {

const ::google::protobuf::Descriptor* AE_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AE_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_AE_2eproto() {
  protobuf_AddDesc_AE_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "AE.proto");
  GOOGLE_CHECK(file != NULL);
  AE_descriptor_ = file->message_type(0);
  static const int AE_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AE, apn_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AE, api_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AE, aei_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AE, poa_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AE, or__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AE, nl_),
  };
  AE_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AE_descriptor_,
      AE::default_instance_,
      AE_offsets_,
      -1,
      -1,
      -1,
      sizeof(AE),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AE, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AE, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_AE_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AE_descriptor_, &AE::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_AE_2eproto() {
  delete AE::default_instance_;
  delete AE_reflection_;
}

void protobuf_AddDesc_AE_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\010AE.proto\022\027MicroWireless.OneM2M.pb\"P\n\002A"
    "E\022\013\n\003apn\030d \001(\t\022\013\n\003api\030e \001(\t\022\013\n\003aei\030f \001(\t"
    "\022\013\n\003poa\030g \003(\t\022\n\n\002or\030h \001(\t\022\n\n\002nl\030i \001(\tb\006p"
    "roto3", 125);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "AE.proto", &protobuf_RegisterTypes);
  AE::default_instance_ = new AE();
  AE::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_AE_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_AE_2eproto {
  StaticDescriptorInitializer_AE_2eproto() {
    protobuf_AddDesc_AE_2eproto();
  }
} static_descriptor_initializer_AE_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int AE::kApnFieldNumber;
const int AE::kApiFieldNumber;
const int AE::kAeiFieldNumber;
const int AE::kPoaFieldNumber;
const int AE::kOrFieldNumber;
const int AE::kNlFieldNumber;
#endif  // !_MSC_VER

AE::AE()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MicroWireless.OneM2M.pb.AE)
}

void AE::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

AE::AE(const AE& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MicroWireless.OneM2M.pb.AE)
}

void AE::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  apn_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  api_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  aei_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  or__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AE::~AE() {
  // @@protoc_insertion_point(destructor:MicroWireless.OneM2M.pb.AE)
  SharedDtor();
}

void AE::SharedDtor() {
  apn_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  api_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  aei_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  or__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void AE::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AE::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AE_descriptor_;
}

const AE& AE::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_AE_2eproto();
  return *default_instance_;
}

AE* AE::default_instance_ = NULL;

AE* AE::New(::google::protobuf::Arena* arena) const {
  AE* n = new AE;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AE::Clear() {
  apn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  api_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  aei_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  or__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  poa_.Clear();
}

bool AE::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MicroWireless.OneM2M.pb.AE)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string apn = 100;
      case 100: {
        if (tag == 802) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_apn()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->apn().data(), this->apn().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MicroWireless.OneM2M.pb.AE.apn");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(810)) goto parse_api;
        break;
      }

      // optional string api = 101;
      case 101: {
        if (tag == 810) {
         parse_api:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_api()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->api().data(), this->api().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MicroWireless.OneM2M.pb.AE.api");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(818)) goto parse_aei;
        break;
      }

      // optional string aei = 102;
      case 102: {
        if (tag == 818) {
         parse_aei:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_aei()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->aei().data(), this->aei().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MicroWireless.OneM2M.pb.AE.aei");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(826)) goto parse_poa;
        break;
      }

      // repeated string poa = 103;
      case 103: {
        if (tag == 826) {
         parse_poa:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_poa()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->poa(this->poa_size() - 1).data(),
            this->poa(this->poa_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MicroWireless.OneM2M.pb.AE.poa");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(826)) goto parse_poa;
        if (input->ExpectTag(834)) goto parse_or;
        break;
      }

      // optional string or = 104;
      case 104: {
        if (tag == 834) {
         parse_or:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_or_()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->or_().data(), this->or_().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MicroWireless.OneM2M.pb.AE.or");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(842)) goto parse_nl;
        break;
      }

      // optional string nl = 105;
      case 105: {
        if (tag == 842) {
         parse_nl:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nl().data(), this->nl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "MicroWireless.OneM2M.pb.AE.nl");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MicroWireless.OneM2M.pb.AE)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MicroWireless.OneM2M.pb.AE)
  return false;
#undef DO_
}

void AE::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MicroWireless.OneM2M.pb.AE)
  // optional string apn = 100;
  if (this->apn().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->apn().data(), this->apn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MicroWireless.OneM2M.pb.AE.apn");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      100, this->apn(), output);
  }

  // optional string api = 101;
  if (this->api().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->api().data(), this->api().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MicroWireless.OneM2M.pb.AE.api");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      101, this->api(), output);
  }

  // optional string aei = 102;
  if (this->aei().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->aei().data(), this->aei().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MicroWireless.OneM2M.pb.AE.aei");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      102, this->aei(), output);
  }

  // repeated string poa = 103;
  for (int i = 0; i < this->poa_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->poa(i).data(), this->poa(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "MicroWireless.OneM2M.pb.AE.poa");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      103, this->poa(i), output);
  }

  // optional string or = 104;
  if (this->or_().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->or_().data(), this->or_().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MicroWireless.OneM2M.pb.AE.or");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      104, this->or_(), output);
  }

  // optional string nl = 105;
  if (this->nl().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nl().data(), this->nl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MicroWireless.OneM2M.pb.AE.nl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      105, this->nl(), output);
  }

  // @@protoc_insertion_point(serialize_end:MicroWireless.OneM2M.pb.AE)
}

::google::protobuf::uint8* AE::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MicroWireless.OneM2M.pb.AE)
  // optional string apn = 100;
  if (this->apn().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->apn().data(), this->apn().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MicroWireless.OneM2M.pb.AE.apn");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        100, this->apn(), target);
  }

  // optional string api = 101;
  if (this->api().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->api().data(), this->api().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MicroWireless.OneM2M.pb.AE.api");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        101, this->api(), target);
  }

  // optional string aei = 102;
  if (this->aei().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->aei().data(), this->aei().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MicroWireless.OneM2M.pb.AE.aei");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        102, this->aei(), target);
  }

  // repeated string poa = 103;
  for (int i = 0; i < this->poa_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->poa(i).data(), this->poa(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MicroWireless.OneM2M.pb.AE.poa");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(103, this->poa(i), target);
  }

  // optional string or = 104;
  if (this->or_().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->or_().data(), this->or_().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MicroWireless.OneM2M.pb.AE.or");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        104, this->or_(), target);
  }

  // optional string nl = 105;
  if (this->nl().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nl().data(), this->nl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "MicroWireless.OneM2M.pb.AE.nl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        105, this->nl(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:MicroWireless.OneM2M.pb.AE)
  return target;
}

int AE::ByteSize() const {
  int total_size = 0;

  // optional string apn = 100;
  if (this->apn().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->apn());
  }

  // optional string api = 101;
  if (this->api().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->api());
  }

  // optional string aei = 102;
  if (this->aei().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->aei());
  }

  // optional string or = 104;
  if (this->or_().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->or_());
  }

  // optional string nl = 105;
  if (this->nl().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nl());
  }

  // repeated string poa = 103;
  total_size += 2 * this->poa_size();
  for (int i = 0; i < this->poa_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->poa(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AE::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AE* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AE>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AE::MergeFrom(const AE& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  poa_.MergeFrom(from.poa_);
  if (from.apn().size() > 0) {

    apn_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.apn_);
  }
  if (from.api().size() > 0) {

    api_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.api_);
  }
  if (from.aei().size() > 0) {

    aei_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.aei_);
  }
  if (from.or_().size() > 0) {

    or__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.or__);
  }
  if (from.nl().size() > 0) {

    nl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nl_);
  }
}

void AE::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AE::CopyFrom(const AE& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AE::IsInitialized() const {

  return true;
}

void AE::Swap(AE* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AE::InternalSwap(AE* other) {
  apn_.Swap(&other->apn_);
  api_.Swap(&other->api_);
  aei_.Swap(&other->aei_);
  poa_.UnsafeArenaSwap(&other->poa_);
  or__.Swap(&other->or__);
  nl_.Swap(&other->nl_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AE::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AE_descriptor_;
  metadata.reflection = AE_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AE

// optional string apn = 100;
void AE::clear_apn() {
  apn_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& AE::apn() const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.AE.apn)
  return apn_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AE::set_apn(const ::std::string& value) {
  
  apn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MicroWireless.OneM2M.pb.AE.apn)
}
 void AE::set_apn(const char* value) {
  
  apn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MicroWireless.OneM2M.pb.AE.apn)
}
 void AE::set_apn(const char* value, size_t size) {
  
  apn_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MicroWireless.OneM2M.pb.AE.apn)
}
 ::std::string* AE::mutable_apn() {
  
  // @@protoc_insertion_point(field_mutable:MicroWireless.OneM2M.pb.AE.apn)
  return apn_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AE::release_apn() {
  
  return apn_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AE::set_allocated_apn(::std::string* apn) {
  if (apn != NULL) {
    
  } else {
    
  }
  apn_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), apn);
  // @@protoc_insertion_point(field_set_allocated:MicroWireless.OneM2M.pb.AE.apn)
}

// optional string api = 101;
void AE::clear_api() {
  api_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& AE::api() const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.AE.api)
  return api_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AE::set_api(const ::std::string& value) {
  
  api_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MicroWireless.OneM2M.pb.AE.api)
}
 void AE::set_api(const char* value) {
  
  api_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MicroWireless.OneM2M.pb.AE.api)
}
 void AE::set_api(const char* value, size_t size) {
  
  api_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MicroWireless.OneM2M.pb.AE.api)
}
 ::std::string* AE::mutable_api() {
  
  // @@protoc_insertion_point(field_mutable:MicroWireless.OneM2M.pb.AE.api)
  return api_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AE::release_api() {
  
  return api_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AE::set_allocated_api(::std::string* api) {
  if (api != NULL) {
    
  } else {
    
  }
  api_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), api);
  // @@protoc_insertion_point(field_set_allocated:MicroWireless.OneM2M.pb.AE.api)
}

// optional string aei = 102;
void AE::clear_aei() {
  aei_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& AE::aei() const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.AE.aei)
  return aei_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AE::set_aei(const ::std::string& value) {
  
  aei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MicroWireless.OneM2M.pb.AE.aei)
}
 void AE::set_aei(const char* value) {
  
  aei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MicroWireless.OneM2M.pb.AE.aei)
}
 void AE::set_aei(const char* value, size_t size) {
  
  aei_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MicroWireless.OneM2M.pb.AE.aei)
}
 ::std::string* AE::mutable_aei() {
  
  // @@protoc_insertion_point(field_mutable:MicroWireless.OneM2M.pb.AE.aei)
  return aei_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AE::release_aei() {
  
  return aei_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AE::set_allocated_aei(::std::string* aei) {
  if (aei != NULL) {
    
  } else {
    
  }
  aei_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), aei);
  // @@protoc_insertion_point(field_set_allocated:MicroWireless.OneM2M.pb.AE.aei)
}

// repeated string poa = 103;
int AE::poa_size() const {
  return poa_.size();
}
void AE::clear_poa() {
  poa_.Clear();
}
 const ::std::string& AE::poa(int index) const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.AE.poa)
  return poa_.Get(index);
}
 ::std::string* AE::mutable_poa(int index) {
  // @@protoc_insertion_point(field_mutable:MicroWireless.OneM2M.pb.AE.poa)
  return poa_.Mutable(index);
}
 void AE::set_poa(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:MicroWireless.OneM2M.pb.AE.poa)
  poa_.Mutable(index)->assign(value);
}
 void AE::set_poa(int index, const char* value) {
  poa_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:MicroWireless.OneM2M.pb.AE.poa)
}
 void AE::set_poa(int index, const char* value, size_t size) {
  poa_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:MicroWireless.OneM2M.pb.AE.poa)
}
 ::std::string* AE::add_poa() {
  return poa_.Add();
}
 void AE::add_poa(const ::std::string& value) {
  poa_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:MicroWireless.OneM2M.pb.AE.poa)
}
 void AE::add_poa(const char* value) {
  poa_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:MicroWireless.OneM2M.pb.AE.poa)
}
 void AE::add_poa(const char* value, size_t size) {
  poa_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:MicroWireless.OneM2M.pb.AE.poa)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
AE::poa() const {
  // @@protoc_insertion_point(field_list:MicroWireless.OneM2M.pb.AE.poa)
  return poa_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
AE::mutable_poa() {
  // @@protoc_insertion_point(field_mutable_list:MicroWireless.OneM2M.pb.AE.poa)
  return &poa_;
}

// optional string or = 104;
void AE::clear_or_() {
  or__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& AE::or_() const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.AE.or)
  return or__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AE::set_or_(const ::std::string& value) {
  
  or__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MicroWireless.OneM2M.pb.AE.or)
}
 void AE::set_or_(const char* value) {
  
  or__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MicroWireless.OneM2M.pb.AE.or)
}
 void AE::set_or_(const char* value, size_t size) {
  
  or__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MicroWireless.OneM2M.pb.AE.or)
}
 ::std::string* AE::mutable_or_() {
  
  // @@protoc_insertion_point(field_mutable:MicroWireless.OneM2M.pb.AE.or)
  return or__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AE::release_or_() {
  
  return or__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AE::set_allocated_or_(::std::string* or_) {
  if (or_ != NULL) {
    
  } else {
    
  }
  or__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), or_);
  // @@protoc_insertion_point(field_set_allocated:MicroWireless.OneM2M.pb.AE.or)
}

// optional string nl = 105;
void AE::clear_nl() {
  nl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& AE::nl() const {
  // @@protoc_insertion_point(field_get:MicroWireless.OneM2M.pb.AE.nl)
  return nl_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AE::set_nl(const ::std::string& value) {
  
  nl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:MicroWireless.OneM2M.pb.AE.nl)
}
 void AE::set_nl(const char* value) {
  
  nl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:MicroWireless.OneM2M.pb.AE.nl)
}
 void AE::set_nl(const char* value, size_t size) {
  
  nl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:MicroWireless.OneM2M.pb.AE.nl)
}
 ::std::string* AE::mutable_nl() {
  
  // @@protoc_insertion_point(field_mutable:MicroWireless.OneM2M.pb.AE.nl)
  return nl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* AE::release_nl() {
  
  return nl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void AE::set_allocated_nl(::std::string* nl) {
  if (nl != NULL) {
    
  } else {
    
  }
  nl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nl);
  // @@protoc_insertion_point(field_set_allocated:MicroWireless.OneM2M.pb.AE.nl)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pb
}  // namespace OneM2M
}  // namespace MicroWireless

// @@protoc_insertion_point(global_scope)
