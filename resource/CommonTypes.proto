
syntax = "proto3";

import "google/protobuf/any.proto";

package MicroWireless.OneM2M.pb;

message CommonTypes
{
  enum ResourceType
  {
    RESOURCE_TYPE_NONE = 0;
    NORMAL = 1;
    VIRTUAL = 2;
    ANNOUNCED = 3;
  }

  enum CSEType
  {
    CSE_TYPE_NONE = 0;
    IN_CSE = 1;
    MN_CSE = 2;
    ASN_CSE = 3;
  }

  enum SupportedResourceType
  {
    SUPPORTED_RESOURCE_TYPE_NONE = 0;

    // Normal Resources

    ACCESS_CONTROL_POLICY = 1;
    AE = 2;
    CONTAINER = 3;
    CONTENT_INSTANCE = 4;
    CSE_BASE = 5;
    DELIVERY = 6;
    EVENT_CONFIG = 7;
    EXEC_INSTANCE = 8;
    GROUP = 9;
    LOCATION_POLICY = 10;
    MGMT_CMD = 11;
    MGMT_OBJ = 12;
    SERVICE_SUB_PROFILE = 13; // m2mServiceSubscriptionProfile
    NODE = 14;
    POLLING_CHANNEL = 15;
    REMOTE_CSE = 16;
    REQUEST = 17;
    SCHEDULE = 18;
    SERVICE_SUB_NODE = 19;    // serviceSubscribedNode
    STATS_COLLECT = 20;
    STATS_CONFIG = 21;
    SUBSCRIPTION = 22;
    SERVICE_SUB_APP_RULE = 23;    // serviceSubscribedAppRule

	  MEMBER_MIXED = 24;	// for MemberType only
	  
	  // Announced Resources, not for MemberType
	  
	  ACCESS_CONTROL_POLICY_ANNC = 10001;
	  AE_ANNC = 10002;
	  CONTAINER_ANNC = 10003;
	  CONTENT_INSTANCE_ANNC = 10004;
	  GROUP_ANNC = 10005;
	  LOCATION_POLICY_ANNC = 10006;
	  MGMT_OBJ_ANNC = 10007;
	  NODE_ANNC = 10008;
	  REMOTE_CSE_ANNC = 10009;
	  SCHEDULE_ANNC = 10010;

	  // Virtual Resources, not for MemberType
	  
    LATEST = 90001;
    OLDEST = 90002;
    FAN_OUT_POINT = 90003;
    POLLING_CHANNEL_URI = 90004;
  }

  enum LocationSource
  {
    LOCATION_SOURCE_NONE = 0;
    NETWORK_BASED = 1;
    DEVICE_BASED = 2;
    SHARING_BASED = 3;
  }

	enum EventCat		
	{
	  // stdEventCats from 1 to 4:
	  
	  EVENT_CATS_NONE = 0;
	  STD_EVENT_CATS_DEFAULT = 1;
	  STD_EVENT_CATS_IMMEDIATE = 2;
	  STD_EVENT_CATS_BEST_EFFORT = 3;
	  STD_EVENT_CATS_LATEST = 4;

	  // user defined events 100-999
	}

	// RFC 6838 defined media types
	enum ContentType
	{
	  CONTENT_TYPE_NONE = 0;
	  APPLICATION_XML = 1;
	  APPLICATION_JSON = 2;
	}
	
	enum FilterUsage
	{
	  FILTER_USAGE_NONE = 0;
	  DISCOVERY_CRITERIA = 1;
	  EVENT_NOTIFICATION_CRITERIA = 2;
	}

	enum DiscoveryResultType
	{
	  DISC_RES_TYPE_NONE = 0;
	  DISC_RES_TYPE_HIERARCHICAL = 1;
	  DISC_RES_TYPE_NON_HIERARCHICAL = 2;
	  DISC_RES_TYPE_CSEID_RESOURCEID = 3;
	}

	enum Operation
	{
	  OPERATION_NONE = 0;
	  OPERATION_CREATE = 1;
	  OPERATION_RETRIEVE = 2;
	  OPERATION_UPDATE = 3;
	  OPERATION_DELETE = 4;
	  OPERATION_NOTIFY = 5;
	}

	enum ResponseType
	{
	  RESPONSE_TYPE_NONE = 0;
	  NON_BLOCKING_REQUEST_SYNC = 1;
	  NON_BLOCKING_REQUEST_ASYNC = 2;
	  BLOCKING_REQUEST = 3;
	}

	enum ResultContent
	{
	  RESULT_CONTENT_NONE = 0;
	  RESULT_CONTENT_NOTHING = 1;
	  RESULT_CONTENT_ATTRIBUTES = 2;
	  RESULT_CONTENT_HADDR = 3;	// Hierachical address
	  RESULT_CONTENT_HADDR_CHILD = 4;	// Hierachical address and child resource
	  RESULT_CONTENT_ATTR_CHILD = 5;	// Attributes and child resource references
	  RESULT_CONTENT_CHILD = 6;	// Child resource references
	  RESULT_CONTENT_ORIGINAL = 7;	// Original resource
	}

	enum RequestStatus
	{
	  REQUEST_STATUS_NONE = 0;
	  REQUEST_STATUS_COMPLETED = 1;
	  REQUEST_STATUS_FAILED = 2;
	  REQUEST_STATUS_PENDING = 3;
	  REQUEST_STATUS_FORWARDED = 4;
 	}

	enum ConsistencyStrategy
	{
	  CONSISTENCY_STRATEGY_NONE = 0;
	  ABONDON_MEMBER = 1;
	  ABONDON_GROUP = 2;
	  SET_MIXED = 3;
	}

	enum CmdType
	{
	  CMD_TYPE_NONE = 0;
	  CMD_TYPE_RESET = 1;
	  CMD_TYPE_REBOOT = 2;
	  CMD_TYPE_UPLOAD = 3;
	  CMD_TYPE_DOWNLOAD = 4;
	  CMD_TYPE_SW_INSTALL = 5;
	  CMD_TYPE_SW_UNINSTALL = 6;
	  CMD_TYPE_SW_UPDATE = 7;
	}

	enum ExecModeType
	{
	  EXEC_MODE_TYPE_NONE = 0;
	  IMMEDIATE_ONCE = 1;
	  IMMEDIATE_REPEAT = 2;
	  RANDOM_ONCE = 3;
	  RANDOM_REPEAT = 4;
	}

	enum ExecStatusType
	{
	  EXEC_STATUS_TYPE_NONE = 0;
	  EXEC_STATUS_INITIATED = 1;
	  EXEC_STATUS_PENDING = 2;
	  EXEC_STATUS_FINISHED = 3;
	  EXEC_STATUS_CANCELLING = 4;
	  EXEC_STATUS_CANCELLED = 5;
	  EXEC_STATUS_UNCANCELLABLE = 6;
	}

	enum ExecResultType
	{
	  EXEC_RESULT_TYPE_NONE = 0;
 
	}

  enum PointOfAccess
  {
    POINT_OF_ACCESS_NONE = 0;
    IPV4 = 1;
    IPV6 = 2;
    FQDN = 3;
  }

  enum ResponseStatusCode
  {
    RSC_NONE = 0;

    // Informational response class
    RSC_ACCEPTED = 1000;

    // Successful response class
    RSC_OK = 2000;
    RSC_CREATED = 2001;
    RSC_DELETED = 2002;
    RSC_CHANGED = 2003;

    // Redirection class

    // Originator Error class
    RSC_BAD_REQUEST = 4000;
    RSC_NOT_FOUND = 4004;
    RSC_OPERATION_NOT_ALLOWED = 4005;
    RSC_REQUEST_TIMEOUT = 4008;
    RSC_SUB_CREATOR_HAS_NO_PRIVILEGE = 4101;
    RSC_CONTENTS_UNACCEPTED = 4102;
    RSC_ACCESS_DENIED = 4103;
    RSC_GROUP_REQUEST_ID_EXISTS = 4104;
    RSC_CONFLICT = 4105;

    // Receiver error class
    RSC_INTERNAL_SERVER_ERROR = 5000;
    RSC_NOT_IMPLEMENTED = 5001;
    RSC_TARGET_NOT_REACHABLE = 5103;
    RSC_NO_PREVILEGE = 5105;
    RSC_ALREADY_EXISTS = 5106;
    RSC_TAGET_NOT_SUBSCIBABLE = 5203;
    RSC_SUB_VERIFICATION_INIT_FAILED = 5204;
    RSC_SUB_HOST_HAS_NO_PRIVILEGE = 5205;
    RSC_NON_BLOCKING_REQUEST_NOT_SUPPORTED = 5206;

    // Network error class
    RSC_EXT_OBJ_NOT_REACHABLE = 6003;
    RSC_EXT_OBJ_NOT_FOUND = 6005;
    RSC_MAX_MEMBER_EXCEEDED = 6010;
    RSC_MEMBER_TYPE_INCONSISTENT = 6011;
    RSC_MGMT_SESSION_CANNOT_ESTABLISH = 6020;
    RSC_MGMT_SESSION_ESTABLISHMENT_TIMEOUT = 6021;
    RSC_INVALID_CMDTYPE = 6022;
    RSC_INVALID_ARGUMENTS = 6023;
    RSC_INSUFFICIENT_ARGUMENTS = 6024;
    RSC_MGMT_CONVERSION_ERROR = 6025;
    RSC_MGMT_CANCELATION_FAILURE = 6026;
    RSC_ALREADY_COMPLETE = 6028;
    RSC_COMMAND_NOT_CANCALLABLE = 6029;

  }
}

message Attribute
{
	uint32 atr = 1;						// protobuf field number
	google.protobuf.Any	vl = 2;			// attribute value
}
